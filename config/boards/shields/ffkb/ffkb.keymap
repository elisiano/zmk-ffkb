#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define COLEMAK 0
#define NAVR 1
#define MOUR 2
#define MEDR 3
#define NSL  4
#define NSSL 5
#define FUNL 6

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_undo {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LC(Z)>;
        };
        combo_q {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp Q>;
        };
        combo_semicolon {
            timeout-ms = <50>;
            key-positions = <33 34>;
            bindings = <&kp SEMI>;
        };
    };
};

/ {

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1 &encoder_2 &encoder_3>;
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        tm: thumbs_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMBS_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            label = "COLEMAK";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            bindings = <
    &kp SPACE &kp Q        &kp W        &kp F       &kp P         &kp B                                       &kp J         &kp L        &kp U         &kp Y       &kp SQT     &kp SPACE
    &kp SPACE &hm LGUI A   &hm LALT R   &hm LCTL S  &hs LSHIFT T  &kp G            &kp LA(TAB)                &kp M         &hs RSHIFT N &hm RCTL E    &hm RALT I  &hm RGUI O  &kp SPACE
    &kp SPACE &kp Z        &kp X        &kp C       &kp D         &kp V                                       &kp K         &kp H        &kp COMMA     &kp DOT     &kp FSLH    &kp SPACE
                                        &kp C_MUTE  &tm MEDR ESC  &tm NAVR SPC &tm MOUR TAB  &tm NSSL RET   &tm NSL BSPC &tm FUNL DEL    &kp C_MUTE
            >;
        };

        navr_layer {
            label = "NAVR";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            bindings = <
    &trans     &trans       &trans       &trans      &trans        &trans                                      &kp K_REDO    &kp K_PASTE  &kp K_COPY    &kp K_CUT   &kp K_UNDO  &trans
    &trans     &kp LGUI     &kp LALT     &kp LCTRL   &kp LSHFT     &trans               &trans                 &kp CAPS      &kp LEFT     &kp DOWN      &kp UP      &kp RIGHT   &trans
    &trans     &trans       &trans       &trans      &trans        &trans                                      &kp INS       &kp HOME     &kp PG_DN     &kp PG_UP   &kp END     &trans
                                         &trans      &trans        &trans       &trans        &kp RET          &kp BSPC      &kp DEL      &trans
            >;
        };
        mour_layer {
            label = "MOUR"; // apparently mouse is not supported... yet?

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP &inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP &inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;

            bindings = <
    &trans     &bootloader &trans      &trans      &trans      &trans                                           &trans      &trans      &trans      &trans      &trans      &trans
    &trans     &trans      &trans      &trans      &trans      &trans                   &trans                  &trans      &trans      &trans      &trans      &trans      &trans
    &trans     &trans      &trans      &trans      &trans      &trans                                           &trans      &trans      &trans      &trans      &trans      &trans
                                         &trans      &trans        &trans        &trans         &trans          &trans      &trans      &trans
            >;
        };
        medr_layer {
            label    = "MEDR";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            bindings = <
    &trans     &trans     &trans       &trans      &trans      &trans                                           &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &trans
    &trans     &kp LGUI   &kp LALT     &kp LCTRL   &kp LSHFT   &trans                    &trans                 &out OUT_BLE  &trans           &trans        &trans        &trans      &trans
    &trans     &trans     &kp RALT     &trans      &trans      &trans                                           &out OUT_USB  &kp C_PREV       &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &trans
                                         &trans      &trans        &trans        &trans         &kp C_STOP      &kp C_PLAY_PAUSE &kp C_MUTE  &kp C_MUTE
            >;
        };
       nsl_layer {
            label    = "NSL";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            bindings = <
    &trans     &kp LBKT  &kp N7 &kp N8 &kp N9 &kp RBKT               &trans  &trans    &trans    &trans   &trans   &trans
    &trans     &kp SEMI  &kp N4 &kp N5 &kp N6 &kp EQUAL   &trans     &trans  &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &trans
    &trans     &kp GRAVE &kp N1 &kp N2 &kp N3 &kp BSLH               &trans  &trans    &trans    &kp RALT &trans   &trans
                         &trans   &kp DOT &kp N0 &kp MINUS         &trans  &trans  &trans &trans
            >;
        };
        nssl_layer {
            label    = "NSSL";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            bindings = <
    &trans     &kp LBRC  &kp AMPS &kp STAR  &kp LPAR  &kp RBRC           &trans  &trans    &trans    &trans   &trans   &trans
    &trans     &kp COLON &kp DLLR &kp PRCNT &kp CARET &kp PLUS  &trans   &trans  &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &trans
    &trans     &kp TILDE &kp EXCL &kp AT    &kp HASH  &kp PIPE           &trans  &trans    &trans    &kp RALT &trans   &trans
                          &trans &kp LPAR  &kp RPAR  &kp UNDER           &trans &trans  &trans    &trans
            >;
        };
        funl_layer {
            label    = "FUNL";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            bindings = <
    &trans     &kp F12 &kp F7 &kp F8  &kp F9 &kp PSCRN                      &trans  &trans    &trans    &trans   &trans   &trans
    &trans     &kp F11 &kp F4 &kp F5  &kp F6 &kp SLCK        &trans         &trans  &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &trans
    &trans     &kp F10 &kp F1 &kp F2  &kp F3 &kp PAUSE_BREAK                &trans  &trans    &trans    &kp RALT &trans   &trans
                        &trans &kp K_APP  &kp SPACE  &kp TAB                &trans &trans  &trans    &trans
            >;
        };

    };
};
